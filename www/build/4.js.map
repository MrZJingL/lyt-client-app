{"version":3,"sources":["../../src/providers/http/http.ts","../../src/pages/login/login.module.ts","../../src/pages/login/login.ts"],"names":[],"mappings":";;;;;;;;;;;;;;;;;;;;AAA2C;AACoC;AAC9D;AACjB;;;;;EAKE;AAEF;IAEE,sBAAmB,IAAU;QAAV,SAAI,GAAJ,IAAI,CAAM;QADtB,QAAG,GAAQ,wBAAwB,CAAE;IAG5C,CAAC;IAED,6BAAM,GAAN;QACE,MAAM,CAAC,IAAI,CAAC,GAAG,CAAC;IAClB,CAAC;IAED,4BAAK,GAAL,UAAM,GAAW,EAAE,SAAiB;QAClC,IAAI,MAAM,GAAG,IAAI,8DAAO,CAAC;YACvB,cAAc,EAAE,kDAAkD;YAClE,OAAO,EAAE,YAAY,CAAC,OAAO,CAAC,OAAO,CAAC;SACvC,CAAC,CAAC;QACH,IAAI,OAAO,GAAG,IAAI,qEAAc,CAAC;YAC/B,OAAO,EAAE,MAAM;SAChB,CAAC,CAAC;QAEH,IAAI,eAAe,GAAG,IAAI,sEAAe,EAAE,CAAC;QAC5C,eAAe,CAAC,MAAM,CAAC,MAAM,EAAE,SAAS,CAAC,CAAC;QAC1C,IAAI,KAAK,GAAG,eAAe,CAAC,QAAQ,EAAE;QACtC,IAAI,CAAC,IAAI,CAAC,IAAI,CAAC,GAAG,EAAE,KAAK,EAAE,OAAO,CAAC;aAChC,GAAG,CAAC,aAAG,IAAI,UAAG,CAAC,IAAI,EAAE,EAAV,CAAU,CAAC;aACtB,SAAS,CAAC,cAAI;YACb,MAAM,CAAC,IAAI,CAAC;QACd,CAAC,EAAE,aAAG;YACJ,MAAM,CAAC,GAAG,CAAC;QACb,CAAC,CAAC;IACN,CAAC;IA7BU,YAAY;QADxB,yEAAU,EAAE;6DAGc,2DAAI,oBAAJ,2DAAI;OAFlB,YAAY,CA+BxB;IAAD,mBAAC;;CAAA;AA/BwB;;;;;;;;;;;;;;;;;;;;;ACVgB;AACO;AACZ;AACqB;AAazD;IAAA;IAA8B,CAAC;IAAlB,eAAe;QAX3B,uEAAQ,CAAC;YACR,YAAY,EAAE;gBACZ,yDAAS;aACV;YACD,OAAO,EAAE;gBACP,sEAAe,CAAC,QAAQ,CAAC,yDAAS,CAAC;aACpC;YACD,SAAS,EAAE;gBACT,0EAAY;aACb;SACF,CAAC;OACW,eAAe,CAAG;IAAD,sBAAC;CAAA;AAAH;;;;;;;;;;;;;;;;;;;;;;AChBc;AACe;AACA;AAEzD;;;;;GAKG;AAOH;IAQE,mBAAmB,OAAsB,EAAS,SAAoB,EAAS,MAAoB;QAAhF,YAAO,GAAP,OAAO,CAAe;QAAS,cAAS,GAAT,SAAS,CAAW;QAAS,WAAM,GAAN,MAAM,CAAc;QANnG,SAAI,GAAQ;YACV,IAAI,EAAE,EAAE;YACR,GAAG,EAAE,EAAE;YACP,IAAI,EAAC,GAAG;SACT;IAID,CAAC;IAGD,kCAAc,GAAd;IAEA,CAAC;IAED,uBAAG,GAAH;QACE,IAAI,IAAI,GAAK,IAAI,CAAC,MAAM,CAAC,KAAK,CAAC,IAAI,CAAC,MAAM,CAAC,MAAM,EAAE,GAAC,OAAO,EAAE,IAAI,CAAC,SAAS,CAAC,IAAI,CAAC,IAAI,CAAC,CAAC,CAAC;IAC1F,CAAC;IAnBU,SAAS;QAJrB,wEAAS,CAAC;YACR,QAAQ,EAAE,YAAY;WACE;SAC1B,CAAC;kBASmG;OARxF,SAAS,CAoBrB;IAAD,eAAC;;AAAA;SApBY,SAAS,e","file":"4.js","sourcesContent":["import { Injectable } from '@angular/core';\nimport { Http, Headers, RequestOptions, URLSearchParams } from '@angular/http';\nimport 'rxjs/Rx';\n/*\n  Generated class for the HttpProvider provider.\n\n  See https://angular.io/guide/dependency-injection for more info on providers\n  and Angular DI.\n*/\n@Injectable()\nexport class HttpProvider {\n private url:string='http://127.0.0.1:8099/' ;\n  constructor(public http: Http) {\n    \n  }\n \n  getUrl():string{\n    return this.url;\n  }\n\n  hPost(url: string, parameter: string): any {\n    let header = new Headers({\n      'Content-Type': 'application/x-www-form-urlencoded; charset=UTF-8',\n      'token': localStorage.getItem('token')\n    });\n    let options = new RequestOptions({\n      headers: header,\n    });\n\n    let urlSearchParams = new URLSearchParams();\n    urlSearchParams.append('json', parameter);\n    let param = urlSearchParams.toString()\n    this.http.post(url, param, options)\n      .map(res => res.json())\n      .subscribe(data => {\n        return data;\n      }, err => {\n        return err;\n      })\n  }\n\n}\n\n\n\n\n\n// WEBPACK FOOTER //\n// ./src/providers/http/http.ts","import { NgModule } from '@angular/core';\nimport { IonicPageModule } from 'ionic-angular';\nimport { LoginPage } from './login';\nimport { HttpProvider } from '../../providers/http/http';\n\n@NgModule({\n  declarations: [\n    LoginPage,\n  ],\n  imports: [\n    IonicPageModule.forChild(LoginPage),\n  ],\n  providers: [\n    HttpProvider\n  ]\n})\nexport class LoginPageModule {}\n\n\n\n// WEBPACK FOOTER //\n// ./src/pages/login/login.module.ts","import { Component } from '@angular/core';\nimport { IonicPage, NavController, NavParams } from 'ionic-angular';\nimport { HttpProvider } from '../../providers/http/http';\n\n/**\n * Generated class for the LoginPage page.\n *\n * See https://ionicframework.com/docs/components/#navigation for more info on\n * Ionic pages and navigation.\n */\n\n@IonicPage()\n@Component({\n   selector: 'page-login',\n  templateUrl: 'login.html',\n})\nexport class LoginPage {\n\n  user: any = {\n    name: '',\n    pwd: '',\n    type:'2'\n  }\n\n  constructor(public navCtrl: NavController, public navParams: NavParams, public myHttp: HttpProvider) {\n\n  }\n\n\n  ionViewDidLoad() {\n    \n  }\n \n  sub():void{   \n    let date =   this.myHttp.hPost(this.myHttp.getUrl()+\"login\", JSON.stringify(this.user));\n  }\n}\n\n\n\n// WEBPACK FOOTER //\n// ./src/pages/login/login.ts"],"sourceRoot":""}